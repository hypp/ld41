pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
function _init()
 player={}
 player.x = 64
 player.y = 64
 player.vel_y = 0.0
 player.vel_x = 0.0
 player.acc_y = 0.0
 player.acc_x = 0.0
 player.jumping = false
 player.note_length = 0


 y = 48
 lines = {}
 for i=1,5 do
  line1={}
  line1.y = y
  line1.spring_x = 64
  line1.spring_y = y+8
  line1.spring_vel_y = 0.0
  line1.spring_acc_y = 0.0
  line1.has_player = false
  add(lines,line1)

  y += 8
 end

 lines[3].has_player = true
 player.line = 3

-- spring constants
 k = 0.085
 d = 0.125

end

function _update()
 -- handle all inputs
 -- calculate all forces
 -- update all positions
 -- check if we are on a new line
 local force_y = 0
 force_y += 0.6 -- gravity

 if btn(0) then
  player.acc_x = -1.0
 elseif btn(1) then
  player.acc_x = 1.0
 else
  player.acc_x = 0.0
  player.vel_x = 0.0
 end
 if player.jumping then
  force_y += 0.0
 elseif btn(4) then
  player.jumping = true
  if player.line > 0 then
   lines[player.line].has_player = false
  end
  player.line = 0
  force_y += -8.0
 end
 if btnp(5) then
  player.note_length = (player.note_length + 1) % 4
 end
 
 -- TODO notes should weigh different things
 if player.line > 0 then
  diff = lines[player.line].y - player.y
  force_y += diff*k - player.vel_y*d
 end

 player.acc_y = force_y

 player.vel_x += player.acc_x
 player.vel_y += player.acc_y
 player.x = player.x + player.vel_x

 if player.x < 0 then
  player.x = 0
 end
 if player.x > 127 then
  player.x = 127
 end

 player.y = player.y + player.vel_y
 
 if player.y > 100 then
  player.jumping = false
  player.acc_y = 0.0
  player.vel_y = 0.0
  player.y = 100
 end
 
 for l in all(lines) do
  if l.has_player then
   l.spring_x = player.x
   l.spring_y = player.y
  else
   force_y = 0.0
--   force_y += 0.6 -- gravity
   
   diff = l.y - l.spring_y
   force_y += diff*k - l.spring_vel_y*d
   l.spring_acc_y = force_y
   l.spring_vel_y += l.spring_acc_y
   l.spring_y += l.spring_vel_y
  end
 end

 -- if moving down, try to attach to line
 if player.vel_y > 0 and player.line == 0 then
  for key,value in pairs(lines) do
   if value.y-8 < player.y and value.y+8 > player.y then
    value.has_player = true
    player.line = key
    break
   end
  end
 end

end

function _draw()
 cls(7)

 for l in all(lines) do
  line(0,l.y,l.spring_x,l.spring_y,5)
  line(l.spring_x,l.spring_y,127,l.y,5)
 end
 
 if player.y >= 64 then
  spr(player.note_length,player.x+1,player.y-14,1,2)
 else
  spr(player.note_length,player.x,player.y-2,1,2,true,true)
 end
  
end
__gfx__
77777777777771777777717777777177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777117000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777171000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777171000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777171000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777171000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777771777777717777777177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77111777771111777711117777111177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
71777177717771777111117771111177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
71777177717717777111177771111777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77111777771177777711777777117777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
